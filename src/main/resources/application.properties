
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"




# production profile
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mcdms
spring.datasource.username=hbstudent
spring.datasource.password=hbstudent
# none | validate | update | create-drop
#spring.jpa.hibernate.ddl-auto=create
#spring.profiles.active=production
#jdbc:sqlserver://mynewmcdm.database.windows.net:1433;database=mcdms;user=mohamedalihamzaoui@mynewmcdm;password={your_password_here};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect




# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manaxéger).


#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update


# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect

